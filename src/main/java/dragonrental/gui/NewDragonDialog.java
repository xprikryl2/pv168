/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package dragonrental.gui;

import dragonrental.backend.Dragon;
import dragonrental.backend.DragonElement;
import dragonrental.backend.DragonManager;
import dragonrental.common.IllegalEntityException;
import dragonrental.common.ServiceFailureException;
import dragonrental.common.Validation;
import dragonrental.common.ValidationException;
import java.time.LocalDate;
import java.time.ZoneId;
import java.time.format.DateTimeParseException;
import java.util.ResourceBundle;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.SwingWorker;

/**
 *
 * @author zuz
 */
public class NewDragonDialog extends javax.swing.JDialog {

    private DragonManager manager;
    private ResourceBundle bundle = ResourceBundle.getBundle("dragonrental/gui/language");
    private DragonTableModel model;
    
    /**
     * Creates new form NewReservationDialog
     */
    public NewDragonDialog(java.awt.Frame parent, boolean modal, DragonManager dragonManager, DragonTableModel model) {
        super(parent, modal);
        initComponents();
        //jXDatePicker1.setFormats("YYYY-MM-DD");
        this.manager = dragonManager;
        this.model = model;
        setLocationRelativeTo(parent);
        setVisible(modal);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        addDragonButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        elementComboBox = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        nameField = new javax.swing.JTextField();
        speedSpinner = new javax.swing.JSpinner();
        jXDatePicker1 = new org.jdesktop.swingx.JXDatePicker();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("dragonrental/gui/language"); // NOI18N
        setTitle(bundle.getString("addDragon")); // NOI18N

        jLabel1.setText(bundle.getString("dragonName:")); // NOI18N

        addDragonButton.setText(bundle.getString("add")); // NOI18N
        addDragonButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                addDragonButtonMouseClicked(evt);
            }
        });

        cancelButton.setText(bundle.getString("cancel")); // NOI18N
        cancelButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cancelButtonMouseClicked(evt);
            }
        });

        jLabel2.setText(bundle.getString("birth_date:")); // NOI18N

        elementComboBox.setModel(new DefaultComboBoxModel(DragonElement.values()));

        jLabel3.setText(bundle.getString("element:")); // NOI18N

        jLabel5.setText(bundle.getString("speed:")); // NOI18N

        nameField.setText(bundle.getString("dragonName")); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel5)
                            .addComponent(jLabel1))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(nameField, javax.swing.GroupLayout.DEFAULT_SIZE, 239, Short.MAX_VALUE)
                            .addComponent(elementComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(speedSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jXDatePicker1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(addDragonButton, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(cancelButton, javax.swing.GroupLayout.DEFAULT_SIZE, 152, Short.MAX_VALUE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(nameField, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(elementComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jXDatePicker1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(speedSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addDragonButton)
                    .addComponent(cancelButton))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addDragonButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addDragonButtonMouseClicked
        Dragon dragon = new Dragon();
        dragon.setName(nameField.getText());
        dragon.setElement((DragonElement)elementComboBox.getSelectedItem());
        dragon.setMaximumSpeed((Integer) speedSpinner.getValue());
        try {
            dragon.setDateOfBirth(null);
            if (jXDatePicker1.getDate() != null) {
                dragon.setDateOfBirth(LocalDate.parse(jXDatePicker1.getDate().toInstant().atZone(ZoneId.systemDefault()).toLocalDate().toString()));
            }
        } catch (DateTimeParseException ex) {
            JOptionPane.showMessageDialog(this,
                    bundle.getString("date_parse_error"),
                    bundle.getString("error"),
                    JOptionPane.WARNING_MESSAGE);
            return;
        }
        dragon.setId(null);
        
        String error = Validation.dragonValidator(dragon);
        
        if (error != null) {
            JOptionPane.showMessageDialog(this,
                    bundle.getString(error),
                    bundle.getString("error"),
                    JOptionPane.WARNING_MESSAGE);
        }
        else {
            new AddDragonWorker(dragon, this).execute();
        }
        
    }//GEN-LAST:event_addDragonButtonMouseClicked

    private void cancelButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cancelButtonMouseClicked
        dispose();
    }//GEN-LAST:event_cancelButtonMouseClicked

    private class AddDragonWorker extends SwingWorker<Void,Void> {
        private Dragon dragon;
        private javax.swing.JDialog parent;
        private boolean error = false;
        
        public AddDragonWorker(Dragon dragon, javax.swing.JDialog parent) {
            this.dragon = dragon;
            this.parent = parent;
        }
        
        @Override
        protected Void doInBackground() {
            try {
                manager.createDragon(dragon);
            } 
            catch(ServiceFailureException | ValidationException | IllegalEntityException | IllegalStateException ex) {
                JOptionPane.showMessageDialog(parent,
                ex.getLocalizedMessage(),
                bundle.getString("error"),
                JOptionPane.ERROR_MESSAGE);
                this.error = true;
                return null;
            }

            return null;
        }
        
        @Override
        protected void done(){
            if(!error) {
                JOptionPane.showMessageDialog(parent,
                    bundle.getString("dragon_added"),
                    bundle.getString("done"),
                    JOptionPane.INFORMATION_MESSAGE);
                
                model.addDragon(dragon);
                model.fireTableRowsInserted(model.getRowCount(), model.getRowCount());
                parent.dispose();
            }
        }
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addDragonButton;
    private javax.swing.JButton cancelButton;
    private javax.swing.JComboBox<String> elementComboBox;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private org.jdesktop.swingx.JXDatePicker jXDatePicker1;
    private javax.swing.JTextField nameField;
    private javax.swing.JSpinner speedSpinner;
    // End of variables declaration//GEN-END:variables
}
